
CREATE TABLE MEMBER (
	MEMBERID VARCHAR2(20) PRIMARY KEY,
	MEMBERPW VARCHAR2(30) NOT NULL,
	NAME VARCHAR2(20) NOT NULL,
	NICKNAME VARCHAR2(50) NOT NULL,
	EMAIL VARCHAR2(300),
	GENDER NUMBER NOT NULL,
	PHONENUM VARCHAR2(15) NOT NULL,
	ADDRESS VARCHAR2(200) NOT NULL,
	DETAILADDRESS VARCHAR2(100),
	ROLE NUMBER DEFAULT 3,
	SUSPENSIONMEMBER TIMESTAMP DEFAULT NULL
);

CREATE TABLE MEMBERPROFILE (
	PROFILENUM NUMBER PRIMARY KEY,
	MEMBERID VARCHAR2(20) NOT NULL,
	PROFILEIMG VARCHAR2(50) DEFAULT NULL,
	SHORTINTRO VARCHAR2(100) DEFAULT NULL,
	INTRO VARCHAR2(1200) DEFAULT NULL,
	RECOMMENDCNT NUMBER DEFAULT 0,
	PROHIBITCNT NUMBER DEFAULT 0,
	CONSTRAINT FK_MEMBERPROFILE_MEMBERID FOREIGN KEY (MEMBERID) REFERENCES MEMBER(MEMBERID) ON DELETE CASCADE
);

CREATE TABLE BOARD (
    BOARDNUM NUMBER PRIMARY KEY,
    TITLE VARCHAR2(300) NOT NULL,
    CONTENT VARCHAR2(3512) NOT NULL,
    MEMBERID VARCHAR2(20) NOT NULL,
    RECOMMENDCNT NUMBER DEFAULT 0,
    PROHIBITCNT NUMBER DEFAULT 0,
    CATEGORY NUMBER NOT NULL,
    BOARDDATE TIMESTAMP,
    BOARDIMG VARCHAR2(500) DEFAULT NULL,
    VIEWCNT NUMBER DEFAULT 0,
    CONSTRAINT FK_BOARD_MEMBERID FOREIGN KEY (MEMBERID) REFERENCES MEMBER(MEMBERID) ON DELETE CASCADE
);

CREATE TABLE COMMENTS (
	COMMENTSNUM NUMBER PRIMARY KEY,
	COMMENTS VARCHAR2(1200),
	BOARDNUM NUMBER,
	MEMBERID VARCHAR2(20),
	PROHIBITCNT NUMBER DEFAULT 0,
	COMMENTSDATE TIMESTAMP,
	CONSTRAINT FK_COMMENTS_BOARDNUM FOREIGN KEY (BOARDNUM) REFERENCES BOARD(BOARDNUM) ON DELETE CASCADE,
	CONSTRAINT FK_COMMENTS_MEMBERID FOREIGN KEY (MEMBERID) REFERENCES MEMBER(MEMBERID) ON DELETE SET NULL
);

CREATE TABLE REPLY (
	REPLYNUM NUMBER PRIMARY KEY,
	REPLY VARCHAR2(1200) NOT NULL,
	COMMENTSNUM NUMBER NOT NULL,
	MEMBERID VARCHAR2(20) NOT NULL,
	PROHIBITCNT NUMBER DEFAULT 0,
	REPLYDATE TIMESTAMP,
	CONSTRAINT FK_REPLY_COMMENTSNUM FOREIGN KEY (COMMENTSNUM) REFERENCES COMMENTS(COMMENTSNUM) ON DELETE CASCADE,
	CONSTRAINT FK_REPLY_MEMBERID FOREIGN KEY (MEMBERID) REFERENCES MEMBER(MEMBERID) ON DELETE SET NULL
);

CREATE TABLE RECOMMEND (
	RECOMMENDNUM NUMBER PRIMARY KEY,
	MEMBERID VARCHAR2(20) NOT NULL,
	COMMONNUM NUMBER,
	CONSTRAINT FK_RECOMMEND_MEMBERID FOREIGN KEY (MEMBERID) REFERENCES MEMBER(MEMBERID) ON DELETE CASCADE
);

CREATE TABLE PROHIBIT (
	PROHIBITNUM NUMBER PRIMARY KEY,
	MEMBERID VARCHAR2(20) NOT NULL,
	COMMONNUM NUMBER,
	CONSTRAINT FK_PROHIBIT_MEMBERID FOREIGN KEY (MEMBERID) REFERENCES MEMBER(MEMBERID) ON DELETE CASCADE
);

CREATE TABLE WARN (
	WARNNUM NUMBER PRIMARY KEY,
	MEMBERID VARCHAR2(20) NOT NULL,
	WARNTYPE NUMBER NOT NULL,
	WARNDATE TIMESTAMP,
	CONSTRAINT FK_WARN_MEMBERID FOREIGN KEY (MEMBERID) REFERENCES MEMBER(MEMBERID) ON DELETE CASCADE
);

CREATE TABLE MATCHING (
	MATCHINGNUM NUMBER PRIMARY KEY,
	SENDERID VARCHAR2(20) NOT NULL,
	RECEIVERID VARCHAR2(20) NOT NULL,
	ACCEPT NUMBER DEFAULT 0,
	CONSTRAINT FK_MATCHING_SENDERID FOREIGN KEY (SENDERID) REFERENCES MEMBER(MEMBERID) ON DELETE CASCADE,
	CONSTRAINT FK_MATCHING_RECEIVERID FOREIGN KEY (RECEIVERID) REFERENCES MEMBER(MEMBERID) ON DELETE CASCADE
);

CREATE TABLE FOOTER (
	COMPANYNAME VARCHAR2(50) PRIMARY KEY,
	COMPANYCEO VARCHAR2(20) NOT NULL,
	COMPANYEMAIL VARCHAR2(300) NOT NULL,
	COMPANYPHONENUM VARCHAR2(15) NOT NULL,
	COMPANYINFO VARCHAR2(300) NOT NULL
);

CREATE TABLE ADVERTISEMENT (
	ADVERTISEMENTNUM NUMBER PRIMARY KEY,
	SITE NUMBER,
	SITEURL VARCHAR2(100) NOT NULL,
	ITEM VARCHAR2(100) NOT NULL,
	ITEMIMG VARCHAR2(100) NOT NULL,
	ITEMPAY VARCHAR2(15) NOT NULL
);


CREATE OR REPLACE TRIGGER warn_member_trigger
BEFORE INSERT ON WARN
FOR EACH ROW
DECLARE
    v_warning_count NUMBER;
    v_suspension_time TIMESTAMP;
BEGIN
    -- 해당 회원의 현재 경고 횟수 가져오기
    SELECT COUNT(*)
    INTO v_warning_count
    FROM WARN
    WHERE MEMBERID = :NEW.MEMBERID;

    IF v_warning_count >= 2 THEN
        -- 현재 시간으로부터 1000년을 더함
        v_suspension_time := SYSTIMESTAMP + INTERVAL '1000' YEAR;

        -- MEMBER 테이블의 SUSPENSIONMEMBER 칼럼 업데이트
        UPDATE MEMBER
        SET SUSPENSIONMEMBER = v_suspension_time,
        ROLE = 9
        WHERE MEMBERID = :NEW.MEMBERID;
    END IF;
END;
